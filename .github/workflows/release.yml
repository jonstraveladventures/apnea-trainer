name: Build and Release

permissions:
  contents: write

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Tag name to create or use for the release (e.g., v1.1.3)'
        required: false
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    name: Build (${{ matrix.os }}-${{ matrix.arch }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            arch: arm64
          - os: windows-latest
            arch: x64
          - os: ubuntu-latest
            arch: x64
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Install Linux build deps
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            libarchive-tools \
            xz-utils \
            rpm \
            file \
            icnsutils \
            graphicsmagick \
            libfuse2 \
            patchelf

      - name: Build React app
        run: npm run build

      - name: Build Electron app (platform/arch specific)
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [[ "$RUNNER_OS" == "macOS" ]]; then
            npm run build && npx electron-builder --mac --arm64
          elif [[ "$RUNNER_OS" == "Windows" ]]; then
            npm run build && npx electron-builder --win --x64
          else
            npm run build && npx electron-builder --linux --x64
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: apnea-trainer-${{ runner.os }}-${{ matrix.arch }}
          path: dist/**

  release:
    name: Create GitHub Release
    needs: build
    if: github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts (all)
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: List artifacts
        run: ls -R artifacts || true

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**
          draft: false
          prerelease: false
          tag_name: ${{ github.event.inputs.release_tag || github.ref_name }}
          target_commitish: ${{ github.sha }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


